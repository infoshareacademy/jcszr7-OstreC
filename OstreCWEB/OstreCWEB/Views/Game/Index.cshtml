@model OstreCWEB.ViewModel.Game.StartGameView
@{
    ViewData["Title"] = "Fight";
}
<!--Playable Character-->

<section class="section">
    <div class="row">
        <div class="col-lg-6"> 


            <label asp-for="User.SavedGameSessions"></label> 
            if(@Model.User.SavedGameSessions != null && @Model.User.SavedGameSessions.Any()){
            <partial name="_GameSessionView" model="@Model.User.SavedGameSessions" />
            }else{
                <div>You don't have any saved game sessions! '</div>
            }
             
            
            <label asp-for="User.CharactersCreated"></label>
            if(@Model.User.CharactersCreated != null && @Model.User.CharactersCreated.Any()){
            <partial name="_PlayableCharacterView" model="@Model.User.CharactersCreated" />
            }else{
                <div>You didn't create any character yet!'</div>
            }
            <label asp-for="User.StoriesCreated"></label>
            if(@Model.OtherUsersStories != null && @Model.OtherUsersStories.Any()){
            <partial name="_StorySummary" model="@Model.OtherUsersStories" />
            }else{
                <div>Other users didn't create any stories !</div>
            }
            <label asp-for="OtherUsersCharacters"></label>
            if(@Model.OtherUsersCharacters != null && @Model.OtherUsersCharacters.Any()){
                <partial name="_PlayableCharacterView" model="@Model.OtherUsersCharacters" />  
            } 
            <label asp-for="OtherUsersStories"></label>
            <partial name="_StorySummary" model="@Model.OtherUsersStories"/> 


            <!--Fight History-->
        </div>
    </div>
</section>

<div class="d-flex flex-row mb-3">

    <div class="p-2 flex-grow-1">
    </div>

</div>


<script>

    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
        }
                            const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
        const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))
    </script>   