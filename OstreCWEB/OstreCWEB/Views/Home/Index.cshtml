@model OstreCWEB.Models.ItemsTest
@using OstreCWEB.Data.Repository.Items;
@using OstreCWEB.Data.Enums;
@{
    ViewData["Title"] = "Home Page";
}

<div class="pagetitle">
    <h1>Welcome to the Fangehull website!</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a asp-area="" asp-controller="Home" asp-action="Index">Home</a></li>
            <li class="breadcrumb-item"><a asp-area="" asp-controller="StoryBuilder" asp-action="Index">StoryBuilder</a></li>
            @*<li class="breadcrumb-item active">Fangehull</li>*@
            
        </ol>
        <button type="button" id="btnScore" onclick="GenerateEnemies()"> Click me!
        </button>
    </nav>
</div><!-- End Page Title -->

<section class="section dashboard">
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>


    @foreach (var enemy in Model.ActiveEnemies)
    { 
        <table>
           
            <tr>
                
                <td>Name:</td>
                <td>@enemy.CharacterName</td>
            </tr>
            <tr>
                <td>Weapon:</td>
                 
                <td>@enemy.EquippedWeapon.Name</td>
            </tr>
            <tr>
                <td>Weapon Damage:</td>
                @{
                    var mainWeapon =enemy.EquippedWeapon;
                                    <td> 
                                    @($" Number of dices:  {mainWeapon.ActionToTrigger.Hit_Dice_Nr} Max:{mainWeapon.ActionToTrigger.Hit_Dmg} Flat bonus:{mainWeapon.ActionToTrigger.Flat_Dmg}")</td>
                 } 
            </tr>
            @{
                if (enemy.EquippedSecondaryWeapon != null) 
                {
                    <tr>
                        <td>Secondary Weapon:</td>
                        <td>@enemy.EquippedSecondaryWeapon.Name</td>
                    </tr>
                    <tr>
                        <td>

                            @{
                                var secondaryWeapon = enemy.EquippedSecondaryWeapon;
                                if (secondaryWeapon != null && secondaryWeapon.ItemType == ItemType.Weapons) {
                                    <td> @($" Number of dices:  {secondaryWeapon.ActionToTrigger.Hit_Dice_Nr} Max:{secondaryWeapon.ActionToTrigger.Hit_Dmg} Flat bonus:{secondaryWeapon.ActionToTrigger.Flat_Dmg}") </td>
                                }
                                if(secondaryWeapon != null && secondaryWeapon.ItemType ==ItemType.Shield){
                                <td> @($" Armor class: {secondaryWeapon.ArmorClass}") </td>
                                }
                                   
                            }
                      
                         
                        </td>
                    </tr>
                }
            }
            <tr>

            </tr>
        </table>

    }
  
</section>
<script>

     
    function GenerateEnemies() {
        $.ajax({
            type: "GET",
            url: "Home/GenerateEnemies",
            async: true,
            success: function (msg) {
                
            },
            error: function () {
                return "error";
            }
        });
    }

</script>
