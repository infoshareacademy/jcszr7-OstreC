@model OstreCWEB.Models.FightViewModel;
@{
    ViewData["Title"] = "Fight";
}
<h1>Fight Fight Fight!</h1>

<p>Avaible Actions: @Model.PlayerActionCounter</p>
<table class="table">
    <thead>
        <tr>
            <th>
                Player Hit Points
            </th>
            <th>
                Player Name
            </th>
            <th>
                Player Race
            </th>
            <th>
                Player Id
            </th>
            <th>
                Action
            </th>
        </tr>
    </thead>
    <tbody>
                <tr>
                    <td>
                @Model.PlayableCharacter.HealthPoints
                    </td>
                    <td>
                @Model.PlayableCharacter.CharacterName
                    </td>
                    <td>
                @Model.PlayableCharacter.Race
                    </td>
                    <td>
                @Model.PlayableCharacter.ID
                    </td>
                    <td>
                    <form class="form-inline my-2 my-lg-0" asp-controller="Fight" asp-action="ActionOnHero" style="padding-right: 25px;">
                            <select name="action" asp-items="@(new SelectList(Model.PlayableCharacter.ActionsOnHero))">
                        <option selected="selected" value="">Choose action!</option>
                        </select>
                            <input type="hidden" name="Model.Player.ID" value="@Model.PlayableCharacter.ID">
                                    <button type="submit" class="btn btn-success"><i class="bi bi-capsule"></i></button>
                        </form>
                    </td>
                </tr>
    </tbody>


</table>

<table class="table">
    <thead>
        <tr>
            <th>
            Enemy Hit Points
            </th>
            <th>
            Enemy Name
            </th>
            <th>
            Enemy Race
            </th>
            <th>
            Enemy Id
            </th>
            <th>
            Action
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var enemy in Model.ActiveEnemies)
        {
                                <tr>
                                    <td>
                    @enemy.HealthPoints
                                    </td>
                                    <td>
                    @enemy.CharacterName
                                    </td>
                                    <td>
                    @enemy.Race
                                    </td>
                                    <td>
                    @enemy.ID
                                    </td>
                                    <td> 
                                     <form class="form-inline my-2 my-lg-0" asp-controller="Fight" asp-action="Action" style="padding-right: 25px;">
                                        <select name="action" asp-items="@(new SelectList(Model.PlayableCharacter.Actions))">
                                <option selected="selected" value="">Choose action!</option>
                                </select>
                                    <input type="hidden" name="enemyId" value="@enemy.ID">
                                            <button type="submit" class="btn btn-danger"><i class="bi bi-hammer"></i></button>
                                </form>
                                    </td>
                                        
                                </tr>
        }
    </tbody>
</table>

<div class="text-center">
    <img src="~/img/d&D.jpg" alt="" width="400" height="300" />
</div>
@foreach (var note in Model.FightHistory)
{
    <p>@note</p>
}

<!--Playable Character-->
<div class="bg-dark text-secondary px-4 py-5 text-center">
    <div class="py-5">

        <div class="d-flex mb-3">
            <div class="p-2 bg-info">

                 <div class="col">
                        <div class="card shadow-sm">
                            <div class="card-body">@Model.PlayableCharacter.CharacterName</div>
                            <svg class="bd-placeholder-img card-img-top" width="100%" height="225" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Thumbnail" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#55595c"></rect><text x="50%" y="50%" fill="#eceeef" dy=".3em">Thumbnail</text></svg>
                            <div class="card-body">@Model.PlayableCharacter.CharacterName</div>

                          

                        </div>
                    </div>  
            </div>

            <div class="p-2 bg-warning">
                <button type="button" class="btn btn-sm btn-outline-secondary">Commit Action</button><br />
                Chosen action:
                <br />

                if(@Model.ActiveAction != null){
                @Model.ActiveAction.ActionName
                <br />
                Possible Targets:
                <br />
                @Model.ActiveAction.PossibleTargets
                }else{
                Choose an action to see possible targets
                }
                <br />
                Chosen target:
                <br />

                
            </div>

            <div class="p-2 flex-grow-1 bg-primary">
                <ul class="list-group list-group-horizontal-xl">
                    <li class="list-group-item">Cras justo odio</li>
                    <li class="list-group-item">Dapibus ac facilisis in</li>
                    <li class="list-group-item">Morbi leo risus</li>
                </ul>

            </div>
        </div>


       
                   
    </div>
</div>

<!--Enemies cards-->
<div class="album py-5 bg-light">
    <div class="container">
         <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3">

            @for (var i = 0; i < Model.ActiveEnemies.Count(); i++)
            {
                <div class="col">
                    <div class="card shadow-sm">

                        @{var viewId = i+1;}
                        <div class="card-body">@Model.ActiveEnemies[i].CharacterName @viewId</div>
                        <svg class="bd-placeholder-img card-img-top" width="100%" height="225" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Thumbnail" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#55595c"></rect><text x="50%" y="50%" fill="#eceeef" dy=".3em">Thumbnail</text></svg>

                        <div class="card-body">
                            <b><label asp-for="@Model.ActiveEnemies[i].HealthPoints"></label></b><br>
                             @Model.ActiveEnemies[i].HealthPoints<br>
                                <label asp-for="@Model.ActiveEnemies[i].ActiveStatuses"></label><br>
                           @foreach (var status in @Model.ActiveEnemies[i].ActiveStatuses) 
                           {
                                <button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="@status.Name">
                                    @status.Description
                                    <button type="button" class="btn btn-sm btn-outline-secondary">Target </button>
                                </button>

                           }


                            <div class="d-flex justify-content-between align-items-center">
                                <div class="btn-group">
                                    <button type="button" class="btn btn-sm btn-outline-secondary">Target </button> 
                                </div>
                                <small class="text-muted">9 mins</small>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

  


<script> 
    function GenerateEnemies() {
        $.ajax({
            type: "GET",
            url: "Home/GenerateEnemies",
            async: true,
            success: function (msg) {
                
            },
            error: function () {
                return "error";
            }
        });
    }

    const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
    const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))
</script>   