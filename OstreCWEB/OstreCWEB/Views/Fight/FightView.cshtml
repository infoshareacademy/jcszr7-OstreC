@model OstreCWEB.Models.FightViewModel;
@{
    ViewData["Title"] = "Fight";
}
@foreach (var note in Model.FightHistory)
{
    <p>@note</p>
}

<!--Playable Character-->
<div class="bg-dark text-secondary px-4 py-5 text-center">
    <div class="py-5">

        <div class="d-flex mb-3">
            <div class="p-2 bg-info">

                 <div class="col">
                        <div class="card shadow-sm">
                            <div class="card-body">@Model.ActivePlayer.CharacterName @Model.ActivePlayer.ID</div>
                            <svg class="bd-placeholder-img card-img-top" width="100%" height="225" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Thumbnail" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#55595c"></rect><text x="50%" y="50%" fill="#eceeef" dy=".3em">Thumbnail</text></svg>
                            <div class="card-body">@Model.ActivePlayer.CharacterName
                                <br />
                               
                                     <div class="d-flex justify-content-between align-items-center">
                                        <div class="btn-group">
                                         <a class="btn btn-danger" asp-route-id="@Model.ActivePlayer.ID" asp-action="SetActiveTarget" >Target</a>
                                         </div> 
                                    </div>
                                 
                            </div>
                        </div>  

                        <div class="p-2 bg-warning">
                            <button type="button" class="btn btn-sm btn-outline-secondary">Commit Action</button><br />
                              Chosen action:
                                <br />
                                 @Model.ActiveAction.ActionName;
                                 @if (Model.ActiveAction != null){
                                       <br />
                                  <p>Possible Targets:</p>
                                     <br />
                                     @Model.ActiveAction.PossibleTargets
                                     }else{
                                       <p>Choose an action to see possible targets</p>
                                         }
                                        <br />
                                     Chosen target:
                                    <br />

                        </div>

                            <div class="p-2 flex-grow-1 bg-primary">
                                        <ul class="list-group list-group-horizontal-xl">
                                         @foreach (var action in @Model.ActivePlayer.AllAvailableActions)
                                          {
                                            <li class="list-group-item">   
                                              <a class="btn btn-danger" asp-route-id="@action.Id" asp-action="SetActiveAction" >@action.ActionName</a>
                                                </li>
                                          }  
                                        </ul>
                                </div>

                </div>        
            </div>
        </div>
    </div>
</div>

<!--Enemies cards-->
<div class="album py-5 bg-light">
    <div class="container">
         <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3">

            @for (var i = 0; i < Model.ActiveEnemies.Count(); i++)
            {
                <div class="col">
                    <div class="card shadow-sm">

                        @{var viewId = i+1;}
                        <div class="card-body">@Model.ActiveEnemies[i].CharacterName @viewId @Model.ActiveEnemies[i].ID</div>
                        <svg class="bd-placeholder-img card-img-top" width="100%" height="225" xmlns="http://www.w3.org/2000/svg" role="img" aria-label="Placeholder: Thumbnail" preserveAspectRatio="xMidYMid slice" focusable="false"><title>Placeholder</title><rect width="100%" height="100%" fill="#55595c"></rect><text x="50%" y="50%" fill="#eceeef" dy=".3em">Thumbnail</text></svg>

                        <div class="card-body">
                            <b><label asp-for="@Model.ActiveEnemies[i].HealthPoints"></label></b><br>
                             @Model.ActiveEnemies[i].HealthPoints<br>
                                <label asp-for="@Model.ActiveEnemies[i].ActiveStatuses"></label><br>
                           @foreach (var status in @Model.ActiveEnemies[i].ActiveStatuses) 
                           {
                                <button type="button" class="btn btn-secondary" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="@status.Name">
                                    @status.Description
                                    <button type="button" class="btn btn-sm btn-outline-secondary">Target </button>
                                </button>

                           }
                            <div class="d-flex justify-content-between align-items-center">
                                        @if (Model.ActiveAction != null && Model.ActiveAction.PossibleTargets.Contains("enemy"))
                                        {
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div class="btn-group">
                                            <a class="btn btn-danger" asp-route-id="@Model.ActiveEnemies[i].ID" asp-action="SetActiveTarget" >Target</a>
                                            </div> 
                                        </div>
                                        }
                                <small class="text-muted">9 mins</small>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

  


<script> 
    function GenerateEnemies() {
        $.ajax({
            type: "GET",
            url: "Home/GenerateEnemies",
            async: true,
            success: function (msg) {
                
            },
            error: function () {
                return "error";
            }
        });
    }

    const tooltipTriggerList = document.querySelectorAll('[data-bs-toggle="tooltip"]')
    const tooltipList = [...tooltipTriggerList].map(tooltipTriggerEl => new bootstrap.Tooltip(tooltipTriggerEl))
</script>   